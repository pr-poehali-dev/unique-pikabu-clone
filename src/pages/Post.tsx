import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';

interface Comment {
  id: number;
  author: string;
  authorAvatar: string;
  authorRating: number;
  content: string;
  rating: number;
  time: string;
  replies?: Comment[];
}

const Post = () => {
  const navigate = useNavigate();
  const [commentText, setCommentText] = useState('');
  const [isCommenting, setIsCommenting] = useState(false);
  const [postVote, setPostVote] = useState<'up' | 'down' | null>(null);
  const [commentVotes, setCommentVotes] = useState<Record<number, 'up' | 'down' | null>>({});
  const [isPostSaved, setIsPostSaved] = useState(false);
  const [shareMenuOpen, setShareMenuOpen] = useState(false);

  const post = {
    id: 1,
    author: '–î–º–∏—Ç—Ä–∏–π –ö–æ—Å–º–æ–Ω–∞–≤—Ç',
    authorAvatar: '/img/2653dd1a-8cde-4c82-a444-5f236774ba17.jpg',
    authorRating: 12845,
    title: '–ö–∞–∫ —è —Å–ª—É—á–∞–π–Ω–æ —Å–æ–∑–¥–∞–ª —Å—Ç–∞—Ä—Ç–∞–ø, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω–∏–ª –º–æ—é –∂–∏–∑–Ω—å',
    content: `–í—Å—ë –Ω–∞—á–∞–ª–æ—Å—å —Å –ø—Ä–æ—Å—Ç–æ–π –∏–¥–µ–∏, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏—à–ª–∞ –º–Ω–µ –≤ –≥–æ–ª–æ–≤—É –≤–æ –≤—Ä–µ–º—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ—Ñ–µ. –Ø –¥–∞–∂–µ –Ω–µ –¥—É–º–∞–ª, —á—Ç–æ —ç—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ —á–µ–º—É-—Ç–æ –±–æ–ª—å—à–µ–º—É...

–Ø —Ä–∞–±–æ—Ç–∞–ª –æ–±—ã—á–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º –≤ –Ω–µ–±–æ–ª—å—à–æ–π –∫–æ–º–ø–∞–Ω–∏–∏. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ: –¥–æ–º, —Ä–∞–±–æ—Ç–∞, –¥–æ–º. –ù–æ –æ–¥–Ω–∞–∂–¥—ã —É—Ç—Ä–æ–º, —Å–∏–¥—è –≤ –∫–∞—Ñ–µ –∏ –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –ª—é–¥—å–º–∏, —è –∑–∞–º–µ—Ç–∏–ª –æ–¥–Ω—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –¥–µ—Ç–∞–ª—å.

## –ú–æ–º–µ–Ω—Ç –æ–∑–∞—Ä–µ–Ω–∏—è

–í—Å–µ –≤–æ–∫—Ä—É–≥ –º–µ–Ω—è –∂–∞–ª–æ–≤–∞–ª–∏—Å—å –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –ø—Ä–æ–±–ª–µ–º—É. –ü—Ä–∏—á—ë–º –∂–∞–ª–æ–≤–∞–ª–∏—Å—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ! –ò —Ç—É—Ç –º–µ–Ω—è –æ—Å–µ–Ω–∏–ª–æ: –∞ —á—Ç–æ –µ—Å–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã?

–Ø –Ω–µ –±—ã–ª –±–∏–∑–Ω–µ—Å–º–µ–Ω–æ–º. –£ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –æ–ø—ã—Ç–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤. –ù–æ —è —Ç–æ—á–Ω–æ –∑–Ω–∞–ª, –∫–∞–∫ –ø–∏—Å–∞—Ç—å –∫–æ–¥. –ü–æ—ç—Ç–æ–º—É —è –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞–ª.

### –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏

–ü–µ—Ä–≤—É—é –≤–µ—Ä—Å–∏—é —è –Ω–∞–ø–∏—Å–∞–ª –∑–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ. –≠—Ç–æ –±—ã–ª —É–∂–∞—Å–Ω—ã–π –∫–æ–¥, –Ω–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–ª! –Ø –ø–æ–∫–∞–∑–∞–ª –µ–≥–æ –¥—Ä—É–∑—å—è–º, –∏ –æ–Ω–∏ –±—ã–ª–∏ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ. 

–ü–æ—Ç–æ–º —è —Ä–∞–∑–º–µ—Å—Ç–∏–ª –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é –æ–Ω–ª–∞–π–Ω. –ó–∞ –ø–µ—Ä–≤—É—é –Ω–µ–¥–µ–ª—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å 10 —á–µ–ª–æ–≤–µ–∫. –Ø –±—ã–ª –Ω–∞ —Å–µ–¥—å–º–æ–º –Ω–µ–±–µ –æ—Ç —Å—á–∞—Å—Ç—å—è!

### –†–æ—Å—Ç –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ

–ù–æ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞—á–∞–ª–æ—Å—å –ø–æ—Ç–æ–º. –õ—é–¥–∏ –Ω–∞—á–∞–ª–∏ –¥–µ–ª–∏—Ç—å—Å—è –º–æ–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏. –ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü —É –º–µ–Ω—è –±—ã–ª–æ —É–∂–µ 1000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ß–µ—Ä–µ–∑ —Ç—Ä–∏ –º–µ—Å—è—Ü–∞ - 10000.

–Ø —Ä–∞–±–æ—Ç–∞–ª –ø–æ –Ω–æ—á–∞–º, –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª. –≠—Ç–æ –±—ã–ª–æ —Ç—è–∂–µ–ª–æ, –Ω–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ. –ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ —è –ø—Ä–æ—Å—ã–ø–∞–ª—Å—è –∏ –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –ø—Ä–æ–≤–µ—Ä—è–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É - —Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏—à–ª–æ –∑–∞ –Ω–æ—á—å.

## –ü–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –º–æ–º–µ–Ω—Ç

–ß–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞ –º–Ω–µ –Ω–∞–ø–∏—Å–∞–ª –∏–Ω–≤–µ—Å—Ç–æ—Ä. –û–Ω —Å–∫–∞–∑–∞–ª, —á—Ç–æ —Å–ª–µ–¥–∏—Ç –∑–∞ –º–æ–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–º –∏ —Ö–æ—á–µ—Ç –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è. –Ø –±—ã–ª –≤ —à–æ–∫–µ.

–ù–∞ –≤—Å—Ç—Ä–µ—á–µ –æ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏–ª –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏. –Ø –µ–¥–≤–∞ —Å–¥–µ—Ä–∂–∏–≤–∞–ª —ç–º–æ—Ü–∏–∏, –ø—ã—Ç–∞—è—Å—å –≤—ã–≥–ª—è–¥–µ—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ. –ú—ã –∑–∞–∫–ª—é—á–∏–ª–∏ —Å–¥–µ–ª–∫—É.

–° —ç—Ç–∏–º–∏ –¥–µ–Ω—å–≥–∞–º–∏ —è —Å–º–æ–≥:
- –ù–∞–Ω—è—Ç—å –ø–µ—Ä–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
- –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ñ–∏—Å
- –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é

### –ö–æ–º–∞–Ω–¥–∞

–°–æ–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –±—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ. –ù–æ —è –∏—Å–∫–∞–ª –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –∞ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä–∏–ª–∏ –≤ –∏–¥–µ—é. –ò –∑–Ω–∞–µ—Ç–µ —á—Ç–æ? –ù–∞—à—ë–ª –∏—Ö!

–°–µ–π—á–∞—Å –Ω–∞—Å 15 —á–µ–ª–æ–≤–µ–∫. –ö–∞–∂–¥—ã–π - —ç–Ω—Ç—É–∑–∏–∞—Å—Ç —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –∫–∞–∫ –µ–¥–∏–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º.

## –ß—Ç–æ —è –ø–æ–Ω—è–ª

–û–≥–ª—è–¥—ã–≤–∞—è—Å—å –Ω–∞–∑–∞–¥, —è –ø–æ–Ω–∏–º–∞—é –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö –≤–µ—â–µ–π:

1. **–ù–∞—á–∏–Ω–∞–π—Ç–µ —Å–µ–π—á–∞—Å** - –Ω–µ –∂–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞
2. **–†–µ—à–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã** - –ª—é–¥–∏ –ø–ª–∞—Ç—è—Ç –∑–∞ —Ä–µ—à–µ–Ω–∏—è
3. **–ù–µ –±–æ–π—Ç–µ—Å—å –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç** - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –≤–∞–∂–Ω–µ–µ
4. **–û–∫—Ä—É–∂–∞–π—Ç–µ —Å–µ–±—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ª—é–¥—å–º–∏** - –∫–æ–º–∞–Ω–¥–∞ —Ä–µ—à–∞–µ—Ç –≤—Å—ë

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–ü—Ä–æ—à—ë–ª –≥–æ–¥ —Å —Ç–æ–≥–æ —É—Ç—Ä–∞ –≤ –∫–∞—Ñ–µ. –°–µ–π—á–∞—Å —É –Ω–∞—Å 100 000 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –∏ –±–æ–ª—å—à–∏–µ –ø–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ.

–Ø –Ω–µ —Å—Ç–∞–ª –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–º. –ù–æ —è –ø–æ—Å—Ç—Ä–æ–∏–ª —Ç–æ, —á–µ–º –≥–æ—Ä–∂—É—Å—å. –ò —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ - —è –ø–æ–º–æ–≥–∞—é –ª—é–¥—è–º —Ä–µ—à–∞—Ç—å –∏—Ö –ø—Ä–æ–±–ª–µ–º—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ—è - –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –í–æ–∑–º–æ–∂–Ω–æ, —á–µ—Ä–µ–∑ –≥–æ–¥ –≤—ã –±—É–¥–µ—Ç–µ –ø–∏—Å–∞—Ç—å –ø–æ—Ö–æ–∂—É—é –∏—Å—Ç–æ—Ä–∏—é.`,
    image: '/img/7e9d4687-154d-41fc-a97a-06f1fa423e1f.jpg',
    tags: ['–±–∏–∑–Ω–µ—Å', '–∏—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞', '—Å—Ç–∞—Ä—Ç–∞–ø—ã', '–º–æ—Ç–∏–≤–∞—Ü–∏—è'],
    rating: 2847,
    views: 45230,
    comments: 342,
    bookmarks: 892,
    time: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
  };

  const comments: Comment[] = [
    {
      id: 1,
      author: '–ê–ª–µ–∫—Å–µ–π–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å',
      authorAvatar: '/img/319aa334-ffa9-48d7-b686-1ee0dddb10e6.jpg',
      authorRating: 8234,
      content: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è! –û—Å–æ–±–µ–Ω–Ω–æ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞. –ê –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å, –∫–∞–∫—É—é –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–±–ª–µ–º—É —Ä–µ—à–∞–µ—Ç –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç? –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –±—ã–ª–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.',
      rating: 156,
      time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      replies: [
        {
          id: 11,
          author: '–î–º–∏—Ç—Ä–∏–π –ö–æ—Å–º–æ–Ω–∞–≤—Ç',
          authorAvatar: '/img/2653dd1a-8cde-4c82-a444-5f236774ba17.jpg',
          authorRating: 12845,
          content: '–°–ø–∞—Å–∏–±–æ! –ù–µ —Ö–æ—á—É –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –ø–æ—Å—Ç –≤ —Ä–µ–∫–ª–∞–º—É, –Ω–æ –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ - –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–∫—É, —Ä–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ üôÇ',
          rating: 89,
          time: '1 —á–∞—Å –Ω–∞–∑–∞–¥',
        }
      ]
    },
    {
      id: 2,
      author: '–ú–∞—Ä–∏–Ω–∞–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      authorAvatar: '/img/319aa334-ffa9-48d7-b686-1ee0dddb10e6.jpg',
      authorRating: 5432,
      content: '–û—á–µ–Ω—å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç! –£ –º–µ–Ω—è —Ç–æ–∂–µ –µ—Å—Ç—å –∏–¥–µ—è, –Ω–æ –≤—Å—ë –≤—Ä–µ–º—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ—Ç–≥–æ–≤–æ—Ä–∫–∏. –ù–∞–≤–µ—Ä–Ω–æ–µ, –ø–æ—Ä–∞ –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.',
      rating: 234,
      time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      replies: [
        {
          id: 21,
          author: '–°–µ—Ä–≥–µ–π–ú–µ–Ω—Ç–æ—Ä',
          authorAvatar: '/img/319aa334-ffa9-48d7-b686-1ee0dddb10e6.jpg',
          authorRating: 15678,
          content: '–ú–∞—Ä–∏–Ω–∞, –≥–ª–∞–≤–Ω–æ–µ - —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥. –î–∞–∂–µ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π. –ó–∞–≤—Ç—Ä–∞ –ø–æ—Ç—Ä–∞—Ç—å—Ç–µ —á–∞—Å –Ω–∞ —Å–≤–æ—é –∏–¥–µ—é. –ü—Ä–æ—Å—Ç–æ —á–∞—Å. –£–≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –∑–∞—Ç—è–Ω–µ—Ç!',
          rating: 123,
          time: '1 —á–∞—Å –Ω–∞–∑–∞–¥',
        }
      ]
    },
    {
      id: 3,
      author: '–ò–≤–∞–Ω–°–∫–µ–ø—Ç–∏–∫',
      authorAvatar: '/img/319aa334-ffa9-48d7-b686-1ee0dddb10e6.jpg',
      authorRating: 3456,
      content: '–ò—Å—Ç–æ—Ä–∏—è —Ö–æ—Ä–æ—à–∞—è, –Ω–æ –∑–≤—É—á–∏—Ç —Å–ª–∏—à–∫–æ–º –∏–¥–µ–∞–ª—å–Ω–æ. –ê –±—ã–ª–∏ –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã? –ü—Ä–æ–≤–∞–ª—ã? –•–æ—Ç–µ–ª–æ—Å—å –±—ã —É—Å–ª—ã—à–∞—Ç—å –∏ –æ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö.',
      rating: 89,
      time: '1 —á–∞—Å –Ω–∞–∑–∞–¥',
      replies: [
        {
          id: 31,
          author: '–î–º–∏—Ç—Ä–∏–π –ö–æ—Å–º–æ–Ω–∞–≤—Ç',
          authorAvatar: '/img/2653dd1a-8cde-4c82-a444-5f236774ba17.jpg',
          authorRating: 12845,
          content: '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü—Ä–æ–±–ª–µ–º –±—ã–ª–æ –º–æ—Ä–µ. –ü–µ—Ä–≤—ã–µ —Ç—Ä–∏ –º–µ—Å—è—Ü–∞ —è —Å–ø–∞–ª –ø–æ 4 —á–∞—Å–∞. –ë—ã–ª –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä —É–ø–∞–ª –∏–∑-–∑–∞ –Ω–∞–ø–ª—ã–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏ —è –ø—Ä–æ–≤—ë–ª 18 —á–∞—Å–æ–≤, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è —Ä–∞–±–æ—Ç—É. –ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –¥—É–º–∞–ª –≤—Å—ë –±—Ä–æ—Å–∏—Ç—å. –ù–æ –ø—Ä–æ–¥–æ–ª–∂–∏–ª. –ú–æ–∂–µ—Ç, –Ω–∞–ø–∏—à—É –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö - —Ç–µ–º–∞ –≤–∞–∂–Ω–∞—è.',
          rating: 267,
          time: '45 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥',
        }
      ]
    },
    {
      id: 4,
      author: '–û–ª—å–≥–∞–î–∏–∑–∞–π–Ω–µ—Ä',
      authorAvatar: '/img/319aa334-ffa9-48d7-b686-1ee0dddb10e6.jpg',
      authorRating: 6789,
      content: '–ö—Ä—É—Ç–æ! –ê –∫–∞–∫ –≤—ã –Ω–∞—Ö–æ–¥–∏–ª–∏ –ø–µ—Ä–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤? –£ –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç, –Ω–æ –Ω–µ –∑–Ω–∞—é, –≥–¥–µ –∏—Å–∫–∞—Ç—å –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–µ–ª—è—Ç –º–æ—é —Å—Ç—Ä–∞—Å—Ç—å.',
      rating: 145,
      time: '30 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥',
    }
  ];

  const handleSubmitComment = () => {
    if (commentText.trim()) {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', commentText);
      setCommentText('');
      setIsCommenting(false);
    }
  };

  const handlePostVote = (type: 'up' | 'down') => {
    if (postVote === type) {
      setPostVote(null);
    } else {
      setPostVote(type);
    }
  };

  const handleCommentVote = (commentId: number, type: 'up' | 'down') => {
    if (commentVotes[commentId] === type) {
      setCommentVotes({ ...commentVotes, [commentId]: null });
    } else {
      setCommentVotes({ ...commentVotes, [commentId]: type });
    }
  };

  const getPostRating = () => {
    let rating = post.rating;
    if (postVote === 'up') rating += 1;
    if (postVote === 'down') rating -= 1;
    return rating;
  };

  const getCommentRating = (comment: Comment) => {
    let rating = comment.rating;
    const vote = commentVotes[comment.id];
    if (vote === 'up') rating += 1;
    if (vote === 'down') rating -= 1;
    return rating;
  };

  const handleShare = (platform: string) => {
    const url = `${window.location.origin}/post/${post.id}`;
    const text = encodeURIComponent(post.title);
    
    const shareUrls: Record<string, string> = {
      vk: `https://vk.com/share.php?url=${encodeURIComponent(url)}&title=${text}`,
      telegram: `https://t.me/share/url?url=${encodeURIComponent(url)}&text=${text}`,
      twitter: `https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${text}`,
      copy: url
    };

    if (platform === 'copy') {
      navigator.clipboard.writeText(url);
      alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    } else {
      window.open(shareUrls[platform], '_blank', 'width=600,height=400');
    }
    setShareMenuOpen(false);
  };

  const getBookmarkCount = () => {
    return post.bookmarks + (isPostSaved ? 1 : 0);
  };

  const renderComment = (comment: Comment, isReply = false) => (
    <div key={comment.id} className={`${isReply ? 'ml-12' : ''}`}>
      <Card className="gradient-card border-border/50 p-4">
        <div className="flex gap-4">
          <div className="flex flex-col items-center gap-2">
            <Button
              variant="ghost"
              size="icon"
              className={`h-7 w-7 transition-all ${
                commentVotes[comment.id] === 'up'
                  ? 'text-primary bg-primary/20 hover:bg-primary/30'
                  : 'hover:text-primary hover:bg-primary/10'
              }`}
              onClick={() => handleCommentVote(comment.id, 'up')}
            >
              <Icon name="ArrowUp" size={16} />
            </Button>
            <span className={`font-bold text-sm transition-colors ${
              commentVotes[comment.id] === 'up'
                ? 'text-primary'
                : commentVotes[comment.id] === 'down'
                ? 'text-destructive'
                : 'text-foreground'
            }`}>
              {getCommentRating(comment)}
            </span>
            <Button
              variant="ghost"
              size="icon"
              className={`h-7 w-7 transition-all ${
                commentVotes[comment.id] === 'down'
                  ? 'text-destructive bg-destructive/20 hover:bg-destructive/30'
                  : 'hover:text-destructive hover:bg-destructive/10'
              }`}
              onClick={() => handleCommentVote(comment.id, 'down')}
            >
              <Icon name="ArrowDown" size={16} />
            </Button>
          </div>

          <div className="flex-1 min-w-0">
            <div className="flex items-center gap-2 mb-2 flex-wrap">
              <Avatar className="w-7 h-7 border border-border">
                <AvatarImage src={comment.authorAvatar} />
                <AvatarFallback>{comment.author[0]}</AvatarFallback>
              </Avatar>
              <span className="font-semibold text-sm hover:text-primary cursor-pointer">
                {comment.author}
              </span>
              <Badge variant="outline" className="text-xs">
                {comment.authorRating} üî•
              </Badge>
              <span className="text-xs text-muted-foreground">‚Ä¢ {comment.time}</span>
            </div>

            <p className="text-sm text-foreground/90 mb-3 leading-relaxed">
              {comment.content}
            </p>

            <div className="flex items-center gap-2">
              <Button variant="ghost" size="sm" className="h-7 gap-1 text-xs">
                <Icon name="MessageSquare" size={14} />
                –û—Ç–≤–µ—Ç–∏—Ç—å
              </Button>
              <Button variant="ghost" size="sm" className="h-7 gap-1 text-xs">
                <Icon name="Share2" size={14} />
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
              </Button>
              <Button variant="ghost" size="sm" className="h-7 gap-1 text-xs">
                <Icon name="Flag" size={14} />
                –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è
              </Button>
            </div>
          </div>
        </div>
      </Card>

      {comment.replies && comment.replies.length > 0 && (
        <div className="mt-3 space-y-3">
          {comment.replies.map((reply) => renderComment(reply, true))}
        </div>
      )}
    </div>
  );

  return (
    <div className="min-h-screen bg-background">
      <header className="sticky top-0 z-50 backdrop-blur-xl bg-card/90 border-b border-border shadow-lg">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center gap-4">
              <Button
                variant="ghost"
                size="icon"
                onClick={() => navigate('/')}
              >
                <Icon name="ArrowLeft" size={20} />
              </Button>
              
              <h1 className="text-2xl font-bold tracking-tight cursor-pointer" onClick={() => navigate('/')}>
                <span className="text-gradient">PULSE</span>
              </h1>
            </div>

            <div className="flex items-center gap-3">
              <Button 
                variant="ghost" 
                size="icon" 
                className="relative"
                onClick={() => navigate('/notifications')}
              >
                <Icon name="Bell" size={20} />
                <span className="absolute top-1 right-1 w-2 h-2 bg-destructive rounded-full" />
              </Button>
              
              <Button variant="ghost" size="icon" onClick={() => navigate('/search')}>
                <Icon name="Search" size={20} />
              </Button>

              <Avatar className="border-2 border-primary cursor-pointer hover-lift">
                <AvatarImage src="/img/2653dd1a-8cde-4c82-a444-5f236774ba17.jpg" />
                <AvatarFallback>YOU</AvatarFallback>
              </Avatar>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-6 max-w-5xl">
        <div className="grid grid-cols-1 lg:grid-cols-12 gap-6">
          <main className="lg:col-span-8 space-y-6">
            <Card className="gradient-card border-border/50 overflow-hidden">
              <div className="p-6">
                <div className="flex gap-4 mb-6">
                  <div className="flex flex-col items-center gap-2">
                    <Button
                      variant="ghost"
                      size="icon"
                      className={`h-10 w-10 transition-all ${
                        postVote === 'up'
                          ? 'text-primary bg-primary/20 hover:bg-primary/30'
                          : 'hover:text-primary hover:bg-primary/10'
                      }`}
                      onClick={() => handlePostVote('up')}
                    >
                      <Icon name="ArrowUp" size={24} />
                    </Button>
                    <span className={`font-bold text-2xl transition-colors ${
                      postVote === 'up'
                        ? 'text-primary'
                        : postVote === 'down'
                        ? 'text-destructive'
                        : 'text-foreground'
                    }`}>
                      {getPostRating()}
                    </span>
                    <Button
                      variant="ghost"
                      size="icon"
                      className={`h-10 w-10 transition-all ${
                        postVote === 'down'
                          ? 'text-destructive bg-destructive/20 hover:bg-destructive/30'
                          : 'hover:text-destructive hover:bg-destructive/10'
                      }`}
                      onClick={() => handlePostVote('down')}
                    >
                      <Icon name="ArrowDown" size={24} />
                    </Button>
                  </div>

                  <div className="flex-1 min-w-0">
                    <div className="flex items-center gap-2 mb-4 flex-wrap">
                      <Avatar className="w-10 h-10 border-2 border-border">
                        <AvatarImage src={post.authorAvatar} />
                        <AvatarFallback>{post.author[0]}</AvatarFallback>
                      </Avatar>
                      <div className="flex items-center gap-2 flex-wrap">
                        <span className="font-semibold hover:text-primary cursor-pointer">
                          {post.author}
                        </span>
                        <Badge variant="outline">
                          {post.authorRating} üî•
                        </Badge>
                        <span className="text-sm text-muted-foreground">‚Ä¢ {post.time}</span>
                      </div>
                    </div>

                    <h1 className="text-3xl font-bold mb-4">
                      {post.title}
                    </h1>

                    {post.image && (
                      <div className="mb-6 rounded-xl overflow-hidden">
                        <img
                          src={post.image}
                          alt={post.title}
                          className="w-full h-96 object-cover"
                        />
                      </div>
                    )}

                    <div className="prose prose-invert max-w-none mb-6">
                      {post.content.split('\n').map((paragraph, index) => {
                        if (paragraph.startsWith('## ')) {
                          return <h2 key={index} className="text-2xl font-bold mt-6 mb-3">{paragraph.replace('## ', '')}</h2>;
                        } else if (paragraph.startsWith('### ')) {
                          return <h3 key={index} className="text-xl font-bold mt-4 mb-2">{paragraph.replace('### ', '')}</h3>;
                        } else if (paragraph.startsWith('- ')) {
                          return <li key={index} className="ml-4">{paragraph.replace('- ', '')}</li>;
                        } else if (paragraph.match(/^\d+\./)) {
                          return <li key={index} className="ml-4">{paragraph.replace(/^\d+\.\s/, '')}</li>;
                        } else if (paragraph.trim()) {
                          return <p key={index} className="mb-4 leading-relaxed text-foreground/90">{paragraph}</p>;
                        }
                        return null;
                      })}
                    </div>

                    <div className="flex flex-wrap gap-2 mb-6">
                      {post.tags.map((tag) => (
                        <Badge
                          key={tag}
                          variant="secondary"
                          className="cursor-pointer hover:bg-primary hover:text-primary-foreground"
                        >
                          #{tag}
                        </Badge>
                      ))}
                    </div>

                    <div className="flex items-center justify-between pt-4 border-t border-border">
                      <div className="flex items-center gap-4">
                        <div className="flex items-center gap-2 text-secondary">
                          <Icon name="MessageSquare" size={20} />
                          <span className="font-medium">{post.comments}</span>
                        </div>

                        <div className="flex items-center gap-2 text-muted-foreground">
                          <Icon name="Eye" size={20} />
                          <span className="font-medium">{post.views.toLocaleString()}</span>
                        </div>

                        <Button
                          variant="ghost"
                          size="sm"
                          className={`gap-2 transition-all ${
                            isPostSaved
                              ? 'text-accent bg-accent/20 hover:bg-accent/30'
                              : 'text-muted-foreground hover:text-accent'
                          }`}
                          onClick={() => setIsPostSaved(!isPostSaved)}
                        >
                          <Icon name={isPostSaved ? "BookmarkCheck" : "Bookmark"} size={20} />
                          <span className="font-medium">{getBookmarkCount()}</span>
                        </Button>
                      </div>

                      <div className="flex items-center gap-2 relative">
                        <Button 
                          variant="outline" 
                          size="sm" 
                          className="gap-2 hover:bg-primary/10"
                          onClick={() => setShareMenuOpen(!shareMenuOpen)}
                        >
                          <Icon name="Share2" size={16} />
                          –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                        </Button>

                        {shareMenuOpen && (
                          <Card className="absolute top-full right-0 mt-2 p-2 z-50 shadow-xl border-border/50 min-w-[200px] animate-fade-in">
                            <div className="flex flex-col gap-1">
                              <Button
                                variant="ghost"
                                size="sm"
                                className="justify-start gap-2 hover:bg-primary/10"
                                onClick={() => handleShare('vk')}
                              >
                                <Icon name="Share" size={16} className="text-blue-500" />
                                –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                              </Button>
                              <Button
                                variant="ghost"
                                size="sm"
                                className="justify-start gap-2 hover:bg-primary/10"
                                onClick={() => handleShare('telegram')}
                              >
                                <Icon name="Send" size={16} className="text-sky-500" />
                                Telegram
                              </Button>
                              <Button
                                variant="ghost"
                                size="sm"
                                className="justify-start gap-2 hover:bg-primary/10"
                                onClick={() => handleShare('twitter')}
                              >
                                <Icon name="Twitter" size={16} className="text-blue-400" />
                                Twitter
                              </Button>
                              <div className="h-px bg-border my-1" />
                              <Button
                                variant="ghost"
                                size="sm"
                                className="justify-start gap-2 hover:bg-accent/10"
                                onClick={() => handleShare('copy')}
                              >
                                <Icon name="Copy" size={16} className="text-accent" />
                                –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
                              </Button>
                            </div>
                          </Card>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </Card>

            <Card className="gradient-card border-border/50 p-6">
              <h2 className="text-xl font-bold mb-4 flex items-center gap-2">
                <Icon name="MessageSquare" size={24} className="text-secondary" />
                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ({comments.length})
              </h2>

              <div className="mb-6">
                {!isCommenting ? (
                  <Button
                    variant="outline"
                    className="w-full justify-start"
                    onClick={() => setIsCommenting(true)}
                  >
                    <Icon name="MessageSquare" size={18} />
                    –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...
                  </Button>
                ) : (
                  <div className="space-y-3">
                    <Textarea
                      placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏..."
                      value={commentText}
                      onChange={(e) => setCommentText(e.target.value)}
                      className="min-h-[120px] resize-none"
                    />
                    <div className="flex justify-end gap-2">
                      <Button
                        variant="ghost"
                        onClick={() => {
                          setIsCommenting(false);
                          setCommentText('');
                        }}
                      >
                        –û—Ç–º–µ–Ω–∞
                      </Button>
                      <Button
                        className="gradient-primary"
                        onClick={handleSubmitComment}
                        disabled={!commentText.trim()}
                      >
                        <Icon name="Send" size={16} />
                        –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                )}
              </div>

              <div className="space-y-4">
                {comments.map((comment) => renderComment(comment))}
              </div>
            </Card>
          </main>

          <aside className="lg:col-span-4 space-y-4">
            <Card className="p-5 gradient-card border-border/50">
              <h3 className="font-bold text-lg mb-4 flex items-center gap-2">
                <Icon name="User" size={20} className="text-primary" />
                –û–± –∞–≤—Ç–æ—Ä–µ
              </h3>
              <div className="space-y-4">
                <div className="flex items-center gap-3">
                  <Avatar 
                    className="w-16 h-16 border-2 border-primary cursor-pointer"
                    onClick={() => navigate('/profile/dmitry')}
                  >
                    <AvatarImage src={post.authorAvatar} />
                    <AvatarFallback>{post.author[0]}</AvatarFallback>
                  </Avatar>
                  <div>
                    <div 
                      className="font-bold hover:text-primary cursor-pointer"
                      onClick={() => navigate('/profile/dmitry')}
                    >
                      {post.author}
                    </div>
                    <Badge variant="outline" className="mt-1">
                      {post.authorRating} üî•
                    </Badge>
                  </div>
                </div>
                <p className="text-sm text-muted-foreground">
                  –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –ü–∏—à—É –æ –±–∏–∑–Ω–µ—Å–µ, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ –ª–∏—á–Ω–æ–º –æ–ø—ã—Ç–µ.
                </p>
                <div className="flex gap-2">
                  <Button className="flex-1 gradient-primary" size="sm">
                    <Icon name="UserPlus" size={16} />
                    –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                  </Button>
                  <Button variant="outline" size="sm">
                    <Icon name="MessageCircle" size={16} />
                  </Button>
                </div>
                <div className="grid grid-cols-3 gap-2 pt-3 border-t border-border">
                  <div className="text-center">
                    <div className="text-xl font-bold text-primary">127</div>
                    <div className="text-xs text-muted-foreground">–ü–æ—Å—Ç–æ–≤</div>
                  </div>
                  <div className="text-center">
                    <div className="text-xl font-bold text-secondary">2.3K</div>
                    <div className="text-xs text-muted-foreground">–ß–∏—Ç–∞—Ç–µ–ª–µ–π</div>
                  </div>
                  <div className="text-center">
                    <div className="text-xl font-bold text-accent">890</div>
                    <div className="text-xs text-muted-foreground">–û—Ç–≤–µ—Ç–æ–≤</div>
                  </div>
                </div>
              </div>
            </Card>

            <Card className="p-5 gradient-card border-border/50">
              <h3 className="font-bold text-lg mb-4 flex items-center gap-2">
                <Icon name="TrendingUp" size={20} className="text-accent" />
                –ü–æ—Ö–æ–∂–∏–µ –ø–æ—Å—Ç—ã
              </h3>
              <div className="space-y-3">
                {[
                  '–û—Ç –∏–¥–µ–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –º–∏–ª–ª–∏–æ–Ω–∞: —á–µ—Å—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
                  '–¢–æ–ø-10 –æ—à–∏–±–æ–∫ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π',
                  '5 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –±–µ–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª –±—ã —Å—Ç–∞—Ä—Ç–∞–ø'
                ].map((title, index) => (
                  <div
                    key={index}
                    className="p-3 rounded-lg hover:bg-muted/50 transition-colors cursor-pointer"
                  >
                    <div className="font-semibold text-sm mb-1 hover:text-primary">
                      {title}
                    </div>
                    <div className="flex items-center gap-2 text-xs text-muted-foreground">
                      <span>234 üëç</span>
                      <span>‚Ä¢</span>
                      <span>56 üí¨</span>
                    </div>
                  </div>
                ))}
              </div>
            </Card>

            <Card className="p-5 gradient-card border-border/50">
              <h3 className="font-bold text-lg mb-4 flex items-center gap-2">
                <Icon name="Tag" size={20} className="text-secondary" />
                –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏
              </h3>
              <div className="flex flex-wrap gap-2">
                {post.tags.map((tag) => (
                  <Badge
                    key={tag}
                    variant="secondary"
                    className="cursor-pointer hover:bg-primary hover:text-primary-foreground"
                  >
                    #{tag}
                  </Badge>
                ))}
              </div>
            </Card>
          </aside>
        </div>
      </div>
    </div>
  );
};

export default Post;